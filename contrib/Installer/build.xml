<?xml version="1.0" encoding="UTF-8"?>
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- Build file for the Frost applet installer                         -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<project name="frostInstaller" default="main" basedir=".">

	<!-- Name of the jar file to create -->
	<property name="jarName" value="frostInstaller" />

	<!-- Give user a chance to override without editing this file
		(and without typing -D each time it compiles it) -->
	<property file=".ant.properties" />
	<property file="${user.home}/.ant.properties" />
	
	<!-- This is the file that contains the needed information to sign the jar -->
	<!-- It shouldn't be uploaded to the CVS and has this syntax:			   -->
	<!-- signjar.alias=the_alias_to_sign_the_jar_under						   -->
	<!-- signjar.storepass=the_password_of_the_keystore						   -->
	<!-- signjar.keypass=the_password_of_the_key							   -->
	<property file=".ant.signjar.Do-Not-Upload-To-CVS" />

	<!-- Don't use systems CLASSPATH, use only the CLASSPATH set in this build file -->
	<property name="build.sysclasspath" value="ignore" />

	<!--  General project properties -->
	<property name="Name" value="Frost Installer" />

	<!--  javac compiler options -->
	<property name="debug" value="true" /><!-- Enabled to see the line number of an exception in stack trace -->
	<property name="deprecation" value="true" />
	<property name="optimize" value="false" /><!-- Enabled to see the line number of an exception in stack trace -->
	<property name="source" value="1.4" /><!-- yay, assertions! -->

	<!--  Set the properties related to the source tree -->
	<property name="src.dir" value="source" />
	<property name="res.dir" value="res" />
	<property name="html.dir" value="html" />

	<!--  Set the properties for the build area  -->
	<property name="build.dir" value="build" />
	<property name="build.classes" value="${build.dir}/classes" />

	<!--  Specify logfile name -->
	<property name="logfilename" value="build.log" />

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--  Output some messages and set DATE,TIME variables                 -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="startmsg" description="--> outputs message">

		<tstamp />
		<echo>Starting build of ${Name} 
		Date : ${DSTAMP} 
		Time : ${TSTAMP} 
		JVM version: ${java.version} of '${java.vendor}' in '${java.home}' 
		Ant project: ${ant.project.name} 
		Ant version: ${ant.version} 
		Build OS : ${os.name} ${os.version} (${os.arch}) 
		Build user : ${user.name} 
		Build log : ${logfilename}</echo>

	</target>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- Builds the installer, packs it into a jar and signs it		   	   -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<target name="build" depends="startmsg" description="--> builds the installer and packs it.">

		<mkdir dir="${build.dir}" />
		<delete quiet="true" dir="${build.classes}" />
		<mkdir dir="${build.classes}" />

		<javac srcdir="${src.dir}" destdir="${build.classes}" 
			debug="${debug}" 
			deprecation="${deprecation}" 
			optimize="${optimize}" 
			source="${source}" 
			encoding="UTF8">
		</javac>
		
    	<jar jarfile="${build.dir}/${jarName}.jar">
      		<fileset dir="${build.classes}">
        		<include name="**/*.class"/>
      		</fileset>
      		<fileset dir=".">
        		<include name="${res.dir}/*"/>
     	 	</fileset>
    	</jar>
    	
    	<signjar jar="${build.dir}/${jarName}.jar"
    		alias="${signjar.alias}"
    		storepass="${signjar.storepass}"
    		keypass="${signjar.keypass}">    	
    	</signjar>
    	
    	<copy todir="${build.dir}">
    		<fileset dir="${html.dir}">
      			<include name="**"/>
   			</fileset>
	  	</copy>

	</target>


	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- Clean -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="clean" description="--> clean the build files.">

		<delete quiet="true" dir="${build.dir}" />

	</target>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- Main target - runs build by default							   -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<target name="main" description="--> creates frost installer jar in ./build">

		<record name="${logfilename}" action="start" />

		<tstamp>
			<format property="NOW.DATE" pattern="dd-MMM-yyyy" locale="en" />
			<format property="NOW.TIME" pattern="HH:mm:ss" locale="en" />
		</tstamp>

		<antcall target="build" />

		<echo>Finished build of ${Name} Date : ${NOW.DATE} Time : ${NOW.TIME}</echo>

		<record name="${logfilename}" action="stop" />

	</target>

</project>