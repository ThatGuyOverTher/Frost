<?xml version="1.0"?>
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- Build file for Frost-wot                                          -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- Main settings you maybe want to change:                           -->
<!--   "zipName"                                                       -->
<!--   "installerDir"                                                  -->
<!--   "distributedSourceFiles"                                        -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<project name="frost" default="main" basedir=".">

  <!-- Name of the distribution zip file to create -->
  <property name="zipName" value="frost-wot-051203.zip"/>

  <!-- Give user a chance to override without editing this file
       (and without typing -D each time it compiles it) -->
  <property file=".ant.properties" />
  <property file="${user.home}/.ant.properties" />

  <!-- Don't use systems CLASSPATH, use only the CLASSPATH set in this build file -->
  <property name="build.sysclasspath" value="ignore"/>

  <!--  General project properties -->
  <property name="Name" value="Frost"/>
  <property name="jarName" value="frost.jar"/>

  <!--  javac compiler options -->
  <property name="debug" value="false" />
  <property name="deprecation" value="false" />
  <property name="optimize" value="true" />

  <!--  Set the properties related to the source tree -->
  <property name="src.dir" value="source"/>
  <property name="bin.dir" value="bin"/>
  <property name="res.dir" value="res"/>

  <!--  Set the properties for the build area  -->
  <property name="build.dir" value="build"/>
  <property name="build.classes" value="${build.dir}/classes"/>

  <!--  Set up properties for the distribution area -->
  <property name="dist.dir" value="${build.dir}/dist"/>

  <!--  The CLASSPATH to use for compilation. -->
  <!--  For compilation of samples the build VSEConnector.jar is used. -->
<!--  <path id="classpath">
    <pathelement location="xerces.jar"/>
  </path> -->

  <!--  Specify logfile name -->
  <property name="logfilename" value="build.log"/>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!--  Output some messages and set DATE,TIME variables                 -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <target name="startmsg"
          description="--> outputs message">

    <tstamp/>
    <echo>Starting build of ${Name}
Date       : ${DSTAMP}
Time       : ${TSTAMP}
JVM version: ${java.version} of '${java.vendor}' in '${java.home}'
Ant project: ${ant.project.name}
Ant version: ${ant.version}
Build OS   : ${os.name} ${os.version} (${os.arch})
Build user : ${user.name}
Build log  : ${logfilename}</echo>

  </target>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!--  Build the code  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <target name="build"
          depends="startmsg"
          description="--> compiles the source code">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.classes}"/>

    <javac srcdir="${src.dir}"
           destdir="${build.classes}"
           debug="${debug}"
           deprecation="${deprecation}"
           optimize="${optimize}" >
<!--      <classpath refid="classpath" />  -->
    </javac>

  </target>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!--  Create the jar file  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <target name="jar"
          depends="build"
          description="--> creates the jar file">

    <delete quiet="true" file="${dist.dir}/${jarName}"/>
    <mkdir dir="${dist.dir}"/>

    <!--  Build the jar file.  -->
    <jar jarfile="${dist.dir}/${jarName}"
         manifest="${src.dir}/frost.manifest">
      <fileset dir="${build.classes}">
        <include name="**/*.class"/>
      </fileset>
      <fileset dir="${res.dir}">
        <include name="**"/>
      </fileset>
    </jar>

  </target>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- Copy remaining files to dist directory and create ZIP -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <target name="distro"
          depends="jar"
          description="--> copy remaining files to dist directory.">

    <copy todir="${dist.dir}" >
      <fileset dir="${bin.dir}"/>
    </copy>

    <mkdir dir="${dist.dir}/downloads"/>
    <mkdir dir="${dist.dir}/exec"/>

    <zip basedir="${dist.dir}" destfile="${build.dir}/${zipName}"/>

  </target>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- Clean -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <target name="clean"
          description="--> clean the build files.">

    <delete quiet="true" file="${build.dir}"/>

  </target>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- Main target - runs dist by default -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <target name="main" description="--> creates the distribution in ./dist">

    <record name="${logfilename}" action="start"/>

    <antcall target="distro"/>

    <tstamp/>
    <echo>Finished build of ${Name}
Date       : ${DSTAMP}
Time       : ${TSTAMP}</echo>

    <record name="${logfilename}" action="stop"/>

  </target>

</project>
