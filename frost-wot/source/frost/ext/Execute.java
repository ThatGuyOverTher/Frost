/*
Execute.java / Frost
Copyright (C) 2001  Jan-Thomas Czornack <jantho@users.sourceforge.net>

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either version 2 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
package frost.ext;

import java.util.logging.*;

/**
 * Supports execution of external programs
 * @author Jan-Thomas Czornack
 */
public class Execute {

	private static Logger logger = Logger.getLogger(Execute.class.getName());

    /**
     * start external program, and return their output
     * @param order the command to execute
     * @return the output generated by the program. Standard ouput and Error output are captured.
     */
	public static void run(String order, boolean wait) throws Throwable {
    	logger.info("-------------------------------------------------------------------\n" +
    				"Execute: " + order + "\n" + 
    				"-------------------------------------------------------------------");
    
    	Transit inputData = new Transit();
    	Transit errorData = new Transit();
    
	    Process p = Runtime.getRuntime().exec(order);    		

	    InputStreamThread ist = new InputStreamThread(p, inputData);
	    ist.start();

	    ErrorStreamThread est = new ErrorStreamThread(p, errorData);
	    est.start();

		if (wait) {
			p.waitFor();
		}
    // 	    ist.join();
    // 	    est.join();
    
    // 	    p.destroy();
    // 	    System.out.println("process stopped");
    	    
    
    	//	System.out.println(inputData.getString() + errorData.getString());
//    	return inputData.getString() + errorData.getString();
    }
}
